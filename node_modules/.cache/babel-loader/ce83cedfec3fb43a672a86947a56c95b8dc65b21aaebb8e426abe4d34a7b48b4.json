{"ast":null,"code":"import VideoComponent from './VideoComponent.vue';\nvar click = 0;\nconst axios = require('axios');\nexport default {\n  components: {\n    VideoComponent\n  },\n  name: 'HelloWorld',\n  data() {\n    return {\n      showvideo: false,\n      thumbnail: \"\",\n      title: \"\",\n      formats: []\n    };\n  },\n  methods: {\n    pasteit() {\n      navigator.clipboard.readText().then(clipText => document.getElementById(\"input\").value = clipText);\n    },\n    submitt() {\n      const url = document.getElementById(\"input\").value;\n      const id = url.split(\"v=\")[1];\n      const id2 = id.substr(0, 11);\n      const options = {\n        method: 'GET',\n        url: 'https://yt-api.p.rapidapi.com/dl',\n        params: {\n          id: id2\n        },\n        headers: {\n          'X-RapidAPI-Key': process.env.VUE_APP_YT_KEY,\n          'X-RapidAPI-Host': 'yt-api.p.rapidapi.com'\n        }\n      };\n      axios.request(options).then(response => {\n        console.log(response.data);\n        this.title = response.data.title;\n        this.thumbnail = response.data.thumbnail[3].url;\n        this.formats = response.data.adaptiveFormats;\n      });\n      click++;\n      if (click % 2 == 0) {\n        this.showvideo = false;\n      } else {\n        this.showvideo = true;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAkBA,OAAOA,cAAa,MAAO,sBAAqB;AAChD,IAAIC,KAAI,GAAI,CAAC;AACb,MAAMC,KAAI,GAAIC,OAAO,CAAC,OAAO;AAC7B,eAAe;EACfC,UAAU,EAAC;IACXJ;EACA,CAAC;EACCK,IAAI,EAAE,YAAY;EAClBC,IAAI,GAAE;IACN,OAAM;MACRC,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAC;IACN,CAAC;EACD,CAAC;EACDC,OAAO,EAAC;IACRC,OAAO,GAAE;MACTC,SAAS,CAACC,SAAS,CAACC,QAAQ,EAAE,CAACC,IAAI,CAAEC,QAAQ,IAAKC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAI,GAAIH,QAAQ,CAAC;IACpG,CAAC;IACAI,OAAO,GAAE;MACV,MAAMC,GAAE,GAAIJ,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;MAClD,MAAMG,EAAC,GAAID,GAAG,CAACE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;MAC5B,MAAMC,GAAE,GAAIF,EAAE,CAACG,MAAM,CAAC,CAAC,EAAC,EAAE;MAC5B,MAAMC,OAAM,GAAI;QACdC,MAAM,EAAE,KAAK;QACbN,GAAG,EAAE,kCAAkC;QACvCO,MAAM,EAAE;UAACN,EAAE,EAAEE;QAAG,CAAC;QACjBK,OAAO,EAAE;UACP,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,cAAc;UAC5C,iBAAiB,EAAE;QACrB;MACF,CAAC;MACD/B,KAAK,CAACgC,OAAO,CAACP,OAAO,CAAC,CAACX,IAAI,CAAEmB,QAAQ,IAAI;QACrCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC7B,IAAI,CAAC;QAC1B,IAAI,CAACG,KAAI,GAAI0B,QAAQ,CAAC7B,IAAI,CAACG,KAAI;QAClC,IAAI,CAACD,SAAQ,GAAI2B,QAAQ,CAAC7B,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAACc,GAAG;QAC/C,IAAI,CAACZ,OAAM,GAAIyB,QAAQ,CAAC7B,IAAI,CAACgC,eAAe;MAC7C,CAAC,CAAC;MACFrC,KAAK,EAAE;MACP,IAAGA,KAAI,GAAI,KAAK,CAAC,EACjB;QAAC,IAAI,CAACM,SAAQ,GAAI,KAAK;MAAC,OACpB;QACJ,IAAI,CAACA,SAAQ,GAAI,IAAI;MACrB;IAGI;EACF;AACF","names":["VideoComponent","click","axios","require","components","name","data","showvideo","thumbnail","title","formats","methods","pasteit","navigator","clipboard","readText","then","clipText","document","getElementById","value","submitt","url","id","split","id2","substr","options","method","params","headers","process","env","VUE_APP_YT_KEY","request","response","console","log","adaptiveFormats"],"sourceRoot":"","sources":["C:\\Users\\Bulzart\\Downloads\\ytcutter\\yt-mp4-cutter\\src\\components\\HelloWorld.vue"],"sourcesContent":["\n<template>\n<div class=\"Wrapper\">\n  <h1 class=\"Title\">Youtube 8K(MP4 Converter)</h1>\n  <div class=\"Input\">\n    <input type=\"text\" id=\"input\" @click=\"pasteit()\" class=\"Input-text text-center\" placeholder=\"https://www.youtube.com/watch?v=bWEbM86Bzz0\">\n    <label for=\"input\" class=\"Input-label\">Video link</label>\n  </div>\n  <div class=\"multi-button mt-2\">\n    <button @click=\"pasteit()\">Paste <i class=\"bi bi-clipboard\"></i></button>\n    <button @click=\"submitt()\">Submit <i class=\"bi bi-arrow-down\"></i></button>\n  </div>\n</div>\n <VideoComponent :showornot=\"showvideo\" :thumbnail=\"thumbnail\" :title=\"title\" :formats=\"formats\"/>\n</template>\n\n<script>\n\nimport VideoComponent from './VideoComponent.vue'\nvar click = 0;\nconst axios = require('axios')\nexport default {\ncomponents:{\nVideoComponent\n},\n  name: 'HelloWorld',\n  data(){\n  return{\nshowvideo: false,\nthumbnail: \"\",\ntitle: \"\",\nformats:[]\n  };\n  },\n  methods:{\n  pasteit(){\n  navigator.clipboard.readText().then((clipText) => document.getElementById(\"input\").value = clipText);\n  },\n   submitt(){\n  const url = document.getElementById(\"input\").value;\n  const id = url.split(\"v=\")[1]\n  const id2 = id.substr(0,11)\nconst options = {\n  method: 'GET',\n  url: 'https://yt-api.p.rapidapi.com/dl',\n  params: {id: id2},\n  headers: {\n    'X-RapidAPI-Key': process.env.VUE_APP_YT_KEY,\n    'X-RapidAPI-Host': 'yt-api.p.rapidapi.com'\n  }\n};\naxios.request(options).then((response) =>{\n    console.log(response.data);\n    this.title = response.data.title\n\tthis.thumbnail = response.data.thumbnail[3].url;\n\tthis.formats = response.data.adaptiveFormats;\n});\nclick++;\nif(click % 2 == 0)\n{this.showvideo = false;}\nelse{\nthis.showvideo = true;\n}\n\n\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}